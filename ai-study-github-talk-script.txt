【1. タイトル】
みなさん、こんにちは。井上剛です。本日は「今GitHubを始める理由」について、AI連携と簡単な使い方を中心にご紹介します。

この発表では、AIとGitHubの重要性、初期設定、基本操作、そしてAIとの連携例についてお話しします。

【2. 自己紹介】
改めまして、自己紹介です。私はシステム開発のPMをしています。GitHubは初心者ですが、AIを活用した開発効率化や、オンプレからクラウドへの移行、勉強会やLTでのナレッジ共有に取り組んでいます。

【3. アジェンダ】
本日のゴールは4点です。
1つ目、AIを使ってコーディングする際にGitHubを利用する重要性。
2つ目、GitHubの初期設定の流れ。
3つ目、GitHubの簡単な操作方法。
4つ目、AIとの連携の例です。

【4. 重要性（AI×バージョン管理）】
AI時代にGitHubが必要な理由についてです。
AIの提案は一発で当たらないことが多く、試行錯誤が前提です。動いた版や壊れた版を履歴で比較でき、原因追跡やロールバックも容易です。
また、レビューやIssueで知見が貯まり、後から来る自分や仲間が理解しやすくなります。自動化（CI）にもAIを組み込みやすいのが特徴です。

【5. Git・GitHub・GitHub Copilotの違い】
ここで用語の違いを整理します。
Gitはローカルで履歴管理・バージョン管理を行うツールです。
GitHubはそのリポジトリをクラウドで共有・コラボできるサービスです。
GitHub CopilotはAIによるコード補完・生成を支援する拡張機能です。

【6. GitHubアカウント作成手順】
まずはGitHubのアカウント作成手順です。
公式サイトにアクセスし、「Sign up」からメールアドレスとパスワードを登録します。ユーザー名を決めて登録を進め、メール認証を行い、2段階認証も設定しましょう。

【7. VS Code拡張 GitHub Pull Requestsの導入】
次に、VS Code拡張「GitHub Pull Requests」の導入方法です。
VS Code左側の拡張機能アイコンをクリックし、検索欄に「GitHub Pull Requests」と入力します。GitHub公式の拡張機能を選択しインストールすると、サイドバーにGitHubアイコンが追加されます。

【8. GUIでの基本操作（GitHub Pull Requests拡張）】
GUIでの基本操作についてです。
サイドバーのGitHubアイコンをクリックし、「リポジトリ」から対象リポジトリを開きます。「変更」タブでファイルを編集し、ステージング・コミット。「プルリクエスト」タブで新規PRを作成・送信できます。レビューやマージもVS Code上で完結します。
コマンド不要で直感的な操作が可能です。コミットやPRの履歴もGUIで確認できます。

【9. AIとの連携（例）】
AIとの連携例です。
AIエージェント連携では、リポジトリを読み込み、要約や質問回答、Issueの起票・優先度付けの補助、CIで要約・レビュー・リリースノート自動化が可能です。例としてClaude Codeは、リポジトリ全体をAIで解析・要約・コード生成できます。
GitHub Copilotは、エディタ内で補完・生成やCopilot Chat、for PRsで説明文生成ができます。まずは個人学習用リポジトリで試すのが安全です。コードレビューもCopilotにお願いできます。

【10. まとめ】
まとめです。
AI時代は試行錯誤が前提で、履歴管理の要がGitHubです。初期設定は最短5ステップで完了し、基本操作はclone、add-commit、push-pullの3系統。AIエージェントやCopilotで学習と開発を加速できます。

【11. 勉強会告知】
最後に、GitHub Japan勉強会のお知らせです。
GitHubの利用方法について、GitHub Japanの方に勉強会を実施していただきます。実施時期は10月下旬を予定しています。参加希望の方はFormsに登録してください。

【12. 参考：VS Codeインストール】
参考情報です。VS Codeのインストールは、公式サイト（https://code.visualstudio.com/download）からアクセスし、手持ちのPCにあったものをダウンロードしてください。

【13. 参考：Gitのインストール確認】
Gitがインストールされているか確認しましょう。
VS Codeで「ターミナル」→「新しいターミナル」を選択し、`git --version`と入力してEnter。結果が「git version x.xx.x」と表示されればOKです。

【14. 参考：Gitのインストール】
もし「git: command not found」となった場合のインストール方法です。
Windowsの場合は公式サイト（https://git-scm.com/）から「Download for Windows」をクリックし、インストーラーを実行、セットアップ画面の指示に従ってください。
Macの場合はターミナルで`git --version`を入力し、初めての場合は「Command Line Developer Toolsが必要です。」と表示されます。「インストール」をクリックし、数分で完了します。インストール後、`git --version`でバージョンが表示されるか確認してください。

以上で発表を終わります。ご清聴ありがとうございました。